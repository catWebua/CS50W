entity: leg

defaults: null

measures:
- name: pbl_revenue
  description: ''
  sql: sum({pbl_revenue})
- name: leg_cost
  description: ''
  sql: sum({leg_cost})
- name: count_legs
  description: ''
  sql: count(1)
- name: first_30days_lcr_submitted
  description: ''
  sql: sum(case when {lcr_status} not in ('Not Reported') and {lcr_status} is not null
    and DATEDIFF('day',{client_lifecycle_activated_at},{received_at}) <= 30 then 1 else
    0 end)
- name: first_30days_lcr_denied
  description: ''
  sql: sum(case when {lcr_status} in ('denied') and {lcr_status} is not null and DATEDIFF('day',{client_lifecycle_activated_at},{received_at})
    <= 30 then 1 else 0 end)
- name: first_30days_lcr_approved
  description: ''
  sql: sum(case when {lcr_status} in ('approved') and {lcr_status} is not null and DATEDIFF('day',{client_lifecycle_activated_at},{received_at})
    <= 30 then 1 else 0 end)
- name: first_30days_opp_leads
  description: ''
  sql: sum(case when {opp_type_id} >= 1 and DATEDIFF('day',{client_lifecycle_activated_at},{received_at})
    <= 30 then 1 else 0 end)
- name: first_30days_delivered_leads
  description: ''
  sql: sum(case when DATEDIFF('day',{client_lifecycle_activated_at},{received_at}) <=
    30 then 1 else 0 end)
- name: total_submitted_lcr
  description: ''
  sql: sum(case when {lcr_status} not in ('Not Reported') and {lcr_status} is not null
    then 1 else 0 end)
- name: total_denied_lcr
  description: ''
  sql: sum(case when {lcr_status} in ('denied') and {lcr_status} is not null then 1 else
    0 end)
- name: total_approved_lcr
  description: ''
  sql: sum(case when {lcr_status} in ('approved') and {lcr_status} is not null then 1
    else 0 end)
- name: total_legs_with_status
  description: ''
  sql: sum(case when {leg_status} not in ('Status Not Set','New') then 1 else 0 end)
- name: loyalty_delivered_revenue
  description: ''
  sql: sum(case when {received_at} > '2022-12-31' then {pbl_revenue} else 0 end)
- name: lifetime_contract_amount_entered
  description: ''
  sql: count({contract_amount})
- name: lifetime_legs_delivered
  description: ''
  sql: count({received_at})
- name: last_30_contract_amount_entered
  description: ''
  sql: count(case when DATEDIFF('day',{created_at},current_date()) < 31 then {contract_amount}
    end)
- name: nx_revenue
  description: ''
  sql: sum(coalesce({nx_revenue}, 0))
- name: dynamic_revenue
  description: ''
  sql: sum(case when {product_type_id} != 9 and {pbl_revenue} > {tpd_price}
       then coalesce({pbl_revenue}, 0) - coalesce({tpd_price}, 0) else 0 end)
- name: appreciation_price
  description: ''
  sql: max(case when {flow_type_id} = 9 then 1 else 0 end)
- name: lcr
  description: ''
  sql: max(case when {lcr_status} != 'Not Reported' then 1 else 0 end)
- name: claim_status_id
  description: ''
  sql: min({claim_status_id})
- name: claim_status
  description: ''
  sql: min_by({lcr_status}, {claim_status_id})
- name: has_sms_from_homeowner_to_client
  description: ''
  sql: max({has_sms_from_homeowner_to_client})
- name: has_sms_reply_from_homeowner_to_client
  description: ''
  sql: max({has_sms_reply_from_homeowner_to_client})
- name: has_sms_from_client_to_homeowner
  description: ''
  sql: max({has_sms_from_client_to_homeowner})
- name: ho_replies
  description: ''
  sql: max({ho_replies})
- name: num_legs_non_ep
  description: ''
  sql: sum(case when coalesce({ep_interaction_status_id}, 0) = 0 then 1 else 0 end)
- name: num_legs_corporate
  description: ''
  sql: sum(case when coalesce({ep_interaction_status_id}, 0) = 1 then 1 else 0 end)
- name: num_legs_franchise
  description: ''
  sql: sum(case when coalesce({ep_interaction_status_id}, 0) = 2 then 1 else 0 end)
- name: num_legs_opp
  description: ''
  sql: count({opp_type_id})
- name: lead_has_a_leg_that_is_scheduled
  description: ''
  sql: count_if({leg_is_scheduled}) > 0
- name: number_of_scheduled_legs
  description: ''
  sql: count_if({leg_is_scheduled})
- name: lead_has_a_leg_that_is_nonscheduled
  description: ''
  sql: count_if(not {leg_is_scheduled} and {received_at} is not null) > 0
- name: leg_first_received_at
  description: ''
  sql: min({received_at})
- name: lead_scheduled_leg_first_received_at
  description: ''
  sql: min(case when {leg_is_scheduled} then {received_at} end)
- name: appointment_setter
  description: ''
  sql: listagg(distinct {appointment_setter}, ', ') within group(order by {appointment_setter})
- name: number_of_scheduled_legs_within_10_days
  description: ''
  sql: count_if({leg_is_scheduled} and {received_at} < dateadd('day', 11, {created_at}::date))
- name: appointment_revenue_within_10_days
  description: ''
  sql: sum(case when {leg_is_scheduled} and {received_at} < dateadd('day', 11, {created_at}::date)
    then {pbl_revenue} end)
- name: revenue_within_10_days
  description: ''
  sql: sum(case when {received_at} < dateadd('day', 11, {created_at}::date) then {pbl_revenue} end)
- name: number_of_core_legs_on_an_appointment_within_10_days
  description: ''
  sql: case when count_if({leg_is_scheduled} and {received_at} < dateadd('day', 11, {created_at}::date)) 
      > 0 then coalesce(count_if(not coalesce({leg_is_scheduled},false) and {received_at}
      < dateadd('day', 11, {created_at}::date)), 0) end
- name: core_revenue_on_an_appointment_within_10_days
  description: ''
  sql: case when count_if({leg_is_scheduled} and {received_at} < dateadd('day', 11, {created_at}::date))
       > 0 then sum(case when not coalesce({leg_is_scheduled},false) and {received_at} 
       < dateadd('day', 11, {created_at}::date) then {pbl_revenue} end) end
- name: number_of_core_legs_on_a_core_only_lead_within_10_days
  description: ''
  sql: case when count_if({leg_is_scheduled}) > 0 then 0 else coalesce(count_if({received_at} 
       < dateadd('day', 11, {created_at}::date)), 0) end
- name: core_revenue_on_a_core_only_lead_within_10_days
  description: ''
  sql: case when count_if({leg_is_scheduled}) > 0 then 0 else sum(case when {received_at} 
       < dateadd('day', 11, {created_at}::date) then {pbl_revenue} end) end
